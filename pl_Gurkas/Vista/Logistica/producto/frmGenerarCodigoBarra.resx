<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="printDocument1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnXaJDa+CmXC1iJ20upGhzL2Uote8kqHfvZSi17qR
        ocy6kJ/UuIydhZVqlQwAAAAAAAAAAAAAAAAAAAAAtoqgacCYp/PdwLr/583C/+fNwv/nzcL/583C/+fN
        wv/nzcL/4MS1/9a3r/+7kp/0t4qbZgAAAAAAAAAAAAAAAMGZqPLt2M7/5szB/9q6uP/OrLD/3L66/9m7
        uP/dvrr/5MnA/93Bs//gxLX/4MS1/7uSoPEAAAAAAAAAAAAAAADDnan3zKqy/7+Xpf/Nq6//2725/+XM
        wf/Zu7j/17i2/92+uv/Xt6//x6Ol/9Cvq/++lqH3AAAAAAAAAAAAAAAArH6Y/OPLxv/nzcL/583C/+fN
        wv/nzcL/583C/+fNwv/nzcL/4MS1/+DEtf/YubD/p3mT/QAAAAAAAAAAAAAAAMOfqvfn0Mr/x6Or/7+X
        pP/AmKX/wJil/8Gapv/Enaj/wpyn/8CYof/Hoqb/3b+z/7+WofcAAAAAAAAAAAAAAACyhpz7wZyp/93A
        uv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/gxLX/2Lmw/7eNnf+rgJj8gICAAgAAAAAAAAAAu5Ok+e3Y
        zv/mzML/2725/86rsP/Jpaz/xqCr/8ehqv/Oq6//wKGp/7eXpf+wk6X/obTL/J5wkYSbf56rmWaZCsOd
        qffKp7H/xJ+r/9Cwtf/fxML/5s/J/+3Yzv/o0cr/4MbD/7qcrP+T0e3/kdHt/4/c+f+Ry+j7l528yqJs
        iyGtf5j948vG/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/9m+v/+zmKz/kdLv/6Wkv/+un7n/lcXi/5eh
        vtGddpaNu5Gk2O3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv/AprT/objR/4/b+P+tnrn/0NLi/52v
        zP+RzOnunIOj06x+l2W5kaPe4snF/9O1uP/FoKz/zq20/+HGxP/WuLr/7dfO/8Sirv+TzOj/lsPf/52t
        yv+Q2fX/moyryZ5tkhUAAAAAomiLFq2AmXq2i5+1vZanysGaqdXBmajduI6h37iPotOng57cmqLA1Zel
        xNGRzej0mpCwxZmUstiebYwqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAonSLC55p
        jyKeeJmMnIWm1qFrlBOebYwqAAAAAP//AAD//wAA4B8AAIAPAAAABwAAAAcAAAAHAAAABwAAAAcAAAAB
        AAAAAQAAAAAAAAAAAACAAQAA4AEAAP/nAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRt
        kg6gbY5GoG2OfqVykbOkcpHWo3CO8KBujfmfbI3/n2yN/6FujvijcI7wpHKR1qVzkbKjbo9/n2uMRaRt
        kg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9q
        jkilc5G7oW+O966AmO6+l6T5zKmu/9e3tv/gxL3/48jA/+fNwv/nzcL/48jA/+DEvf/Xt7b/zKmu/7yT
        n/+ugpf6onCP+6Z1ksKebIxHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ5q
        jR2neJTUrX+X+82prv/jyL//583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/nzcL/4MS1/+DEtf/dv7P/yKOn/6t7lPund5PUoWiOGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACha40mpHSS9c2ss//t187/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/nzcL/583C/+fNwv/gxLX/4MS1/+DEtf/gxLX/4MO1/8WfpP+jdJH1nGqOJAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKh4lNXNrLT/7djO/+3Yzv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+DEtf/gxLX/4MS1/+DEtf/gxLX/4MS1/8WfpP+ndpLTAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAoW6O/evUzP/t2M7/7djO/+fNwv/ly8H/1re2/8ahqv+8kqL/sISa/6+C
        mf/nzcL/yKOr/8ijq//nzcL/sISa/+fNwv/Yubf/07Gt/+DEtf/gxLX/4MS1/+DEtf/gxLX/3sG0/6Bu
        jv0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/7djO/+3Yzv/cwMD/toue/6RykP+vgpn/vZWj/8ml
        rP/Us7T/4cS9/+fNwv/Jpaz/yaWs/+fNwv+kcpD/583C/8OcqP/AmKH/4MS1/6h4k//gxLX/4MS1/+DE
        tf/gxLX/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf/mzsj/tYuf/66Bmf/Lpqz/4se+/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+bLwP/nzcL/3b66/9e3r//gxLX/qnuU/+DE
        tf/Orav/sYSY/9i5sP+fbI3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/6h5lP/OrbT/7dfO/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/4MS1/+DE
        tf/gxLX/4MS1/+DDtf/GoKX/pHOQ/59sjf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/z661/+3Y
        zv/t2M7/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/gxLX/4MS1/+DEtf/gxLX/4MS1/+DEtf/GoaX/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9s
        jf/r1Mz/7djO/+3Yzv/nzcL/48i//9SztP/Goar/uI6f/66AmP+peZX/pHKR/59sjf+fbY3/pXSR/6l7
        lf+vgZn/u5Gi/8SepP/Qr6v/3sGz/+DEtf/gxLX/4MS1/97CtP+fbI3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAn2yN/+3Yzv/t187/2by9/7iOoP+jc5H/sYSa/7+XpP/Mqa7/17e2/+DEvf/jyMD/583C/+fN
        wv/jx7//3sG8/9i5t//LqK3/vZSf/66Alv+kcpD/t42c/8+sqv/gxLX/4MS1/59sjf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACfbI3/4snE/7GFnP+ugZn/zamu/+PIv//nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/gxLX/4MS1/9y+sv/Io6b/qXuT/6+Cl//WuK//n2yN/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf+nd5T/zay0/+3Xzv/nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+DEtf/gxLX/4MS1/+DEtf/ewbP/oW+P/59s
        jf+fbI3/qoCABgAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/82ttP/t2M7/7djO/+fNwv/nzcL/583C/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/4MS1/9Szrv/AmKH/3b+z/9Cv
        rP+mgJr/j935/6V+mfeebo06mWaID59sjYCdbY0vAAAAAAAAAACfbI3/69TM/+3Yzv/t2M7/583C/+PI
        v//Us7T/xqGq/7iOoP+ugJj/qXqV/6Vzkf+fbI3/n2yN/6Vzkf+pepX/sYSb/7uRov/AmKH/onWU/6WM
        pf+ldZL/rH6W/6Gdt/+P3fn/oJ25959ujsmfbY7nnISj4J5wkfGhaYsuAAAAAJ9sjf/t2M7/7dfO/9m8
        vf+4j6H/pHOR/7KGnP/CnKn/0LC1/9u/v//mzsj/6dPL/+3Yzv/t2M7/6tTL/+fOyP/dwcD/0LG3/7eO
        oP+mjqn/j935/5XE3/+Xsc3/kNj0/4/d+f+Q2/b/lbLQ+JLE4faP3fn/m4Gi259sjYAAAAAAn2yN/+LJ
        xP+xhZz/roGZ/9Gwtv/p0sv/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Y
        zv/t2M7/6dLL/6Z4lP+WxOH/j935/4/d+f+P3fn/j935/4/d+f+P3fn/j935/5PD3/GgbY7mpG2SDgAA
        AACfbI3/p3eU/82stP/t187/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Y
        zv/t2M7/7djO/+rVzP/avb7/r4Oc/5ez0P+P3fn/kNHt/5+JqP+fbpD/n4mo/5HR7v+P3fn/lrLO959u
        j8qga4w+km2SB59sjf/NrbT/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Y
        zv/t2M7/7djO/+3Yzv/t2M7/pHSS/6mEn/+kn7n/kNn1/4/d+f+fiqn/wbPI/9zr9//Ascf/n4up/4/d
        +f+Q2fX/mJa24p53l92fbI3uoW6N++jRyf/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Y
        zv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv+fbI3/j935/4/d+f+P3fn/j935/6Bykv/b6fX/3u/6/9vp
        9P+gcpP/j935/4/d+f+P3fn/j935/55sjP+kc5HKzay0/e3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Y
        zv/t2M7/7djO/+3Yzv/t2M7/7djO/+3Yzv/t2M7/7djO/6V1kv+ohJ//op64/5DZ9f+P3fn/n4mo/8Gz
        yP/a5vL/wLHH/5+Kqf+P3fn/kNn1/5mXtt+ed5fbn26O7aFrjSaicZDvzKy0/O3Xzv/t2M7/7djO/9q+
        v//Bm6r/z6+1/9zAwP/kzMb/69bM/+3Yzv/t2M7/7djO/+3Yzv/t2M7/6tXM/9q9vv+vg5z/l7PQ/4/d
        +f+Rzur/n4mo/6B0lf+fiaj/kc7r/4/d+f+UstD5n26Pyp9tjj2SbZIHAAAAAKBtiiOicZDUqnyW8dGw
        tv/p0sv/5czH/8ilsP+7kaT/roGa/6d4lP+4jqL/7djO/7CEm/+fbI3/0LG3/+3Yzv/t2M7/6dLL/6Z4
        lP+WxN//j935/4/d+f+P3fn/j935/4/d+f+P3fn/j935/5LD4fafbo7mpG2SDgAAAAAAAAAAAAAAAAAA
        AACgbYtLpXSRu6JvkPewhJvtxaCs+dW1uv/dwcD/5s7I/+jRyf/o0cn/6NHJ/+jRyf/nzsj/3cHA/9Cx
        t/+3jaD7o4yn94/d+f+SxuL6lbbU+pDb9v+P3fn/kNj0/5W10fuSxuL5j935/5yFpOCfbI1/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApG2SDqBtjkagb45+pnSStKV1ktiicI/yoXCP9qFwj/ahcI/2o3GR8aRz
        keumdpPSpXSTrKBtjoGecZLwnISj4J9ujuafbo/KmZe24Y/d+f+ZmLfmn26PyZ5sjuichKTdnnCS8aFp
        iy4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9qjzCebYyBpG2SDp5tjj+ddZbgj935/553luSfbY04mWaID55t
        jIGdbY0vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2CACJ9uju2fbI3/oG6O65lm
        mQUAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////AD//8AAD/8AAAP+AAAB/AAAAPwAA
        AD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAADcAAAADAAAAAQAAAAMAAAADAAAAAAAA
        AAAAAAAAgAAAA8AAAAPwAAAD/wAAA///9jf///4/
</value>
  </data>
</root>